<!DOCTYPE html>
<html lang="ja">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Pomodoro Navi - 本日のレポート</title>
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  <%= stylesheet_link_tag 'top', media: 'all', 'data-turbolinks-track': 'reload' %>
  <%= stylesheet_link_tag 'navi_message', media: 'all', 'data-turbolinks-track': 'reload' %>
  <%= stylesheet_link_tag 'report', media: 'all', 'data-turbolinks-track': 'reload' %>
  <style>
    /* ナビメッセージとフォームのスタイル */
    #usermessage_form {
        width: 43.5%;
    }
  </style>
</head>
<body data-page="report">
  <a href="https://twitter.com/intent/tweet?text=<%= ERB::Util.url_encode("本日は #{@daily_total_formatted} ポモドーロで作業しました！\nhttps://pomodoro-navi.com/\n#PomodoroNavi") %>"
    target="_blank" rel="noopener noreferrer" class="twitter-share">
    Xにシェアする
  </a>

  <div class="tabs">
    <ul>
      <li><%= link_to 'Day', pomodoro_sessions_reports_day_path, data: { turbo: false }, class: 'active' %></li>
      <li><%= link_to 'Week', pomodoro_sessions_reports_week_path, data: { turbo: false } %></li>
      <li><%= link_to 'Month', pomodoro_sessions_reports_month_path, data: { turbo: false } %></li>
      <li><%= link_to 'Year', pomodoro_sessions_reports_year_path, data: { turbo: false } %></li>
    </ul>
  </div>

  <div id="daily">
    <total>本日の作業時間合計：<%= @daily_total_formatted %></total>
    <canvas id="dailyChart"></canvas>
  </div>

  <!-- グラフ表示のためのJavaScript -->
  <script>
  document.addEventListener('turbolinks:load', function() {
    if (typeof Chart === 'undefined') {
      setTimeout(initChart, 200); // 200ms 後に再試行
      return;
    }
    initChart();
  });

  function initChart() {
    var dailyChartElement = document.getElementById('dailyChart');
    if (dailyChartElement) {
      var ctxDaily = dailyChartElement.getContext('2d');
      var dailyChart = new Chart(ctxDaily, {
        type: 'bar',
        data: {
          labels: Array.from({ length: 24 }, (_, i) => `${i}:00`),
          datasets: [{
            label: '作業時間 (分)',
            data: <%= @hourly_data.to_json.html_safe %>,
            backgroundColor: 'rgba(255, 255, 255, 0.2)',
            borderColor: 'rgba(255, 255, 255, 1)',
            borderWidth: 1
          }]
        },
        options: {
          scales: {
            y: {
              beginAtZero: true,
              max: 60 // 1時間の最大値を60分に設定
            },
            x: {
              beginAtZero: true
            }
          }
        }
      });
    }
  }

  </script>

  <!-- ナビメッセージとフォーム -->
  <div class="navi-container">
    <div class="navi-icon">
      <% if @navi_character %>
        <%= image_tag @navi_character.icon_url.url, alt: @navi_character.name %>
        <p id="navi-name"><%= @navi_character.name %></p>
      <% else %>
        <%= image_tag 'cat.png', alt: 'ニャビ' %>
        <p id="navi-name">ニャビ</p>
      <% end %>
    </div>
    <div class="navi-message" id="navi-message">
      <% if notice %>
        <p class="notice"><%= notice %></p>
      <% elsif alert %>
        <p class="alert"><%= alert %></p>
      <% end %>
      Loading...
    </div>
  </div>

  <form id="usermessage_form">
    <input type="text" id="user_input" placeholder="ナビにメッセージを送る">
    <button id="user_input_button">
      <img src="<%= asset_path 'navichat.png' %>" alt="送信">
    </button>
  </form>

  <%= javascript_include_tag 'navi', 'data-turbolinks-track': 'reload', type: "module" %>
  <script>
  const fetchNaviMessageHandler = () => {
    const isLoggedIn = document.querySelector("meta[name='user-logged-in']")?.content === "true";
    const naviMessageElement = document.getElementById('navi-message');
    const currentPage = document.body.dataset.page; // bodyタグに data-page="top" や data-page="report" を設定

    if (!isLoggedIn || !naviMessageElement) return;

    const fetchUrl = currentPage === "top" ? '/navi_messages/6' : '/navi_messages/random';

    const fetchNaviMessage = () => {
      fetch(fetchUrl)
        .then(response => response.json())
        .then(data => {
          naviMessageElement.innerHTML = `<p>${data.response}</p>`;
        });
    };

    fetchNaviMessage();
  };

  // 一度リスナーを削除してから再登録する
  document.removeEventListener('turbolinks:load', fetchNaviMessageHandler);
  document.addEventListener('turbolinks:load', fetchNaviMessageHandler);
  </script>
</body>
</html>